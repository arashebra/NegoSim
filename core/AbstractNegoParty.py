#######################################################
#
# AbstractNegoParty.py
# Python implementation of the Class AbstractNegoParty
# Generated by Enterprise Architect
# Created on:      26-����-2022 02:24:13 �.�
# Original author: DP
#
#######################################################
from core.AcceptanceStrategyInterface import AcceptanceStrategyInterface
from core.BiddingStrategyInterface import BiddingStrategyInterface
from core.ElicitationStrategyInterface import ElicitationStrategyInterface
from core.OpponentModelInterface import OpponentModelInterface
from core.UserModelInterface import UserModelInterface
from core.NegoPartyInterface import NegoPartyInterface
from core.Bid import Bid
from abc import ABC, abstractmethod


class AbstractNegoParty(NegoPartyInterface):
    elicitation_strategy = ElicitationStrategyInterface()
    user_model = UserModelInterface()
    bidding_strategy = BiddingStrategyInterface()
    opponent_model = OpponentModelInterface()
    acceptance_strategy = AcceptanceStrategyInterface()

    @abstractmethod
    def get_party_name(self) -> str:
        raise NotImplementedError()

    @abstractmethod
    def set_acceptance_strategy(self, acceptance_strategy: AcceptanceStrategyInterface):
        raise NotImplementedError()

    @abstractmethod
    def set_bidding_strategy(self, bidding_strategy: BiddingStrategyInterface):
        raise NotImplementedError()

    @abstractmethod
    def set_elicitation_strategy(self, elicitation_strategy: ElicitationStrategyInterface):
        raise NotImplementedError()

    @abstractmethod
    def set_opponent_model(self, opponent_model: OpponentModelInterface):
        raise NotImplementedError()

    @abstractmethod
    def set_user_model(self, user_model: UserModelInterface):
        raise NotImplementedError()

    @abstractmethod
    def send_bid(self) -> Bid:
        raise NotImplementedError()
